mMssicAndPersonality <- read.csv(file = 'data/car-speeds.csv')
musicPref <- read.csv(file = 'Music Preferences_July 21, 2021_09.22.csv')
musicPref <- read.csv(file = './Music_Pref.csv')
musicPref <- read.csv(file = '.\Music_Pref.csv')
musicPref <- read.csv(file = "Music_Pref.csv")
load("~/Desktop/musicPref/musicPref.R")
musicPref <- read.csv(file = "/Users/eliezeraltshul/Desktop/musicPref.csv")
musicPref <- read.csv(file = "Users/eliezeraltshul/Desktop/musicPref.csv")
musicPref <- read.csv(file = "data/musicPref.csv")
getwd()
setwd("/Users/eliezeraltshul/Desktop/musicPref")
getwd()
musicPref
musicPref <- read.csv(file = "data/musicPref.csv")
musicPref <- read.csv(file = "musicPref.csv")
?file
?read.csv
musicPref <- read.csv("musicPref.csv")
musicPref <- read.csv("music_Pref.csv")
musicPref <- read.csv("data/music_Pref.csv")
musicPref
View(musicPref)
musicPref <- read.csv("data/music_Pref.csv")
View(musicPref)
musicPref <- read.csv("data/music_Pref.csv")
View(musicPref)
print(musicPref[i, j])
for (i in 1:nrow(musicPref)){
for (j in 14:ncol(musicPref)){
print(musicPref[i, j])
if(musicPref[i, j] == "empty"){
musicPref[i, j] = 1
}
}
}
print(musicPref[i, j])
View(musicPref)
setwd("~/Desktop/Udemy Machine Learning Coure/Part 1 - Data Preprocessing/R")
dataset =  read.csv('Data.csv')
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),
dataset$Salary)
dataset$Country =  factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
dataset$Purchased =  factor(dataset$Purchased,
levels = c('Yes', 'No'),
labels = c(1, 0))
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(data$Purchased, SplitRatio = 0.8)
split = sample.split(dataset$Purchased$Purchased, SplitRatio = 0.8)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
training_set = scale(training_set)
test_set = scale(test_set)
View(training_set)
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
